{"version":3,"sources":["../src/index.jsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\n// Clear codemirror variable\nlet _cm = undefined\n\n// Check for client-side rendering, used to 'upgrade' textAreas from server-side rendering\nif (typeof navigator !== 'undefined') {\n\t_cm = require('codemirror')\n}\n\nimport React from 'react'\n\nexport default class ReactCodeMirror extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tisFocused: false\n\t\t}\n\t}\n\n\tshouldComponentUpdate() {\n\t\treturn false\n\t}\n\n\tcomponentDidMount() {\n\t\tconst textareaNode = this.refs.textarea\n\n\t\t// Upgrade textArea node\n\t\tthis.codeMirror = _cm.fromTextArea(textareaNode, this.props.options)\n\n\t\t// editorInstance.getWrapperElement().addEventListener(\"paste\", \n\t\t// function(e) { .... }); \n\n\n\t\t// Bind CodeMirror Events and apply class methods\n\t\tthis.codeMirror.on('change', (doc, change) => this.codemirrorValueChanged(doc, change) )\n\t\tthis.codeMirror.on('focus',  e => this.focusChanged(true) )\n\t\tthis.codeMirror.on('blur',   e => this.focusChanged(false) )\n\t\t\n\t\t// Initialize and set text value\n\t\tthis._currentCodemirrorValue = this.props.defaultValue || this.props.value || ''\n\t\tthis.codeMirror.setValue(this._currentCodemirrorValue)\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// todo: is there a lighter-weight way to remove the cm instance?\n\t\tif (this.codeMirror) this.codeMirror.toTextArea()\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.codeMirror && nextProps.value !== undefined && this._currentCodemirrorValue !== nextProps.value) {\n\t\t\tthis.codeMirror.setValue(nextProps.value)\n\t\t}\n\t\tif (typeof nextProps.options === 'object') {\n\t\t\tfor (let option in nextProps.options) {\n\t\t\t\tif (nextProps.options.hasOwnProperty(option)) {\n\t\t\t\t\tthis.codeMirror.setOption(option, nextProps.options[option])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCodeMirror() {\n\t\treturn this.codeMirror\n\t}\n\n\tfocus() {\n\t\tif (this.codeMirror) {\n\t\t\tthis.codeMirror.focus()\n\t\t}\n\t}\n\n\tfocusChanged(focused) {\n\t\tthis.setState({\n\t\t\tisFocused: focused\n\t\t})\n\n\t\tthis.props.onFocusChange && this.props.onFocusChange(focused)\n\t}\n\n\tcodemirrorValueChanged(doc, change) {\n\t\t// Keep CodeMirror and the textarea up-to-date\n\t\tdoc.save()\n\n\t\t// Get current value\n\t\tconst newValue = doc.getValue()\n\n\t\t// re-assign current value and trigger onChange\n\t\tthis._currentCodemirrorValue = newValue\n\t\tthis.props.onChange && this.props.onChange(newValue)\n\t}\n\n\trender() {\n\t\t// Apply class names\n\t\tconst classes = `ReactCodeMirror ${this.state.isFocused ? 'ReactCodeMirror--focused' : ''} ${this.props.className}`\n\n\t\treturn (\n\t\t\t<div className={ classes }>\n\t\t\t\t<textarea \n\t\t\t\t\tref='textarea'\n\t\t\t\t\tname={ this.props.path }\n\t\t\t\t\tdefaultValue={ this.props.value }\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nReactCodeMirror.propTypes = {\n\tonChange: React.PropTypes.func,\n\tonFocusChange: React.PropTypes.func,\n\toptions: React.PropTypes.object,\n\tpath: React.PropTypes.string,\n\tvalue: React.PropTypes.string,\n\tclassName: React.PropTypes.any\n}"]}